volumes:
  go:
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    working_dir: /app
    volumes:
      - go:/go
      - ./go.mod:/app/go.mod:ro
      - ./go.sum:/app/go.sum:ro
      - ./main.go:/app/main.go:ro
      - ./action:/app/action:ro
      - ./apputils:/app/apputils:ro
      - ./test/sample:/app/test/sample:ro
    command: nodemon --watch './**/*.go' --signal SIGTERM --exec 'go' run main.go
    environment:
      # Declare keys to indicate app to take envs
      # If we don't set, the default one will be used
      DMFCTA_ACTION_KEY: ACTION
      DMFCTA_CRITERIA_KEY: CRITERIA
      DMFCTA_SHELL_KEY: SHELL
      DMFCTA_TIMEOUT_KEY: TIMEOUT
      # Declare 0
      # default SHELL and TIMEOUT
      CRITERIA_0: /app/test/sample
      ACTION_0: echo test1
      # Declare 1, the action is the same with 0
      # default SHELL and TIMEOUT
      CRITERIA_1: /app/test/sample/test1.txt
      ACTION_1: echo test1
      # Declare 2
      # default SHELL and TIMEOUT
      CRITERIA_2: /app/test/sample/test2.txt
      ACTION_2: echo test2
      # Declare 3, wrong shell
      CRITERIA_3: /app/test/sample/test3.txt
      ACTION_3: echo test3
      SHELL_3: bash1
      # Declare 4, over the timeout
      # default SHELL
      CRITERIA_4: /app/test/sample/test4.txt
      ACTION_4: echo test4; sleep 10; echo ok
      TIMEOUT_4: 2
